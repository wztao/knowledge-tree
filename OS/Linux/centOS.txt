设置静态ip(仅主机模式使用本机网卡):
填入IP
GATEWAY=192.168.37.1(主机ip)
IPADDR=192.168.37.191(网段与主机一致)
NETMASK=255.255.255.0(网关)
重启网卡
service network restart
查看结果
ifconfig
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
设置主机名:
系统级修改(永久生效)
vi /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=wztao
vi /etc/host
主机ip wztao(主机名)
重启生效
reboot
验证
hostname
临时修改(重启失效)
hostname xxxx(新的主机名)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
防火墙操作:
service iptables start/stop/status
关闭防火墙自动运行
chkconfig iptables off
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ssh互信:
生成秘钥
ssh-keygen -t rsa
(生成私钥:id_rsa,公钥:id_rsa.pub)
公钥存入需登入的主机.ssh/authorized_keys文件中
验证:
ssh user@hostname
注意:
ssh配置:vi /etc/ssh/sshd_config
RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys

/etc/init.d/ssh restart
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
安装jdk:
解压
环境变量
vi /etc/profile
export JAVA_HOME=/usr/local/jdk1.7(jdk根目录绝对路径)
export PATH=$PATH:$JAVA_HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
source /etc/profile
验证
java -version
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
管道:
前一命令的输出为后一命令的输入      
command1  |   command2
     (out) (input)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
grep (正则匹配)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
定时器:
cron格式:
*　　*　　*　　*　　*　　command 
分　 时　 日　 月　 周　 命令
M: 分钟（0-59）。 
H：小时（0-23）。 
D：天（1-31）。 
m: 月（1-12）。 
d: 一星期内的天（0~6，0为星期天）。 
cmd要运行的程序，程序被送入sh执行，这个shell只有USER,HOME,SHELL这三个环境变量 
crontab 
使用权限 : 所有使用者 
使用方式 : 
crontab file [-u user]-用指定的文件替代目前的crontab。 
crontab-[-u user]-用标准输入替代目前的crontab. 
crontab-1[user]-列出用户目前的crontab. 
crontab-e[user]-编辑用户目前的crontab. 
crontab-d[user]-删除用户目前的crontab. 
crontab-c dir- 指定crontab的目录。 
crontab文件的格式：M H D m d cmd. 
说明:
crontab是用来让使用者在固定时间或固定间隔执行程序之用，换句话说，也就是类似使用者的时程表。
-u user 是指设定指定user的时程表，这个前提是你必须要有其权限(比如说是root)才能够指定他人的时程表。
如果不使用-u user的话，就是表示设定自己的时程表。 
参数: 
crontab -e : 执行文字编辑器来设定时程表，内定的文字编辑器是 VI，如果你想用别的文字编辑器，则请先设定 VISUAL 环境变数 
来指定使用那个文字编辑器(比如说 setenv VISUAL joe) 
crontab -r : 删除目前的时程表 
crontab -l : 列出目前的时程表 
crontab file [-u user]-用指定的文件替代目前的crontab。  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
查看端口:
lsof -i
lsof abc.txt 显示开启文件abc.txt的进程
lsof -c abc 显示abc进程现在打开的文件
lsof -c -p 1234 列出进程号为1234的进程所打开的文件
lsof -g gid 显示归属gid的进程情况
lsof +d /usr/local/ 显示目录下被进程开启的文件
lsof +D /usr/local/ 同上，但是会搜索目录下的目录，时间较长
lsof -d 4 显示使用fd为4的进程
lsof -i 用以显示符合条件的进程情况
lsof -i[46] [protocol][@hostname|hostaddr][:service|port]
		46 --> IPv4 or IPv6
		protocol --> TCP or UDP
		hostname --> Internet host name
		hostaddr --> IPv4地址
		service --> /etc/service中的 service name (可以不止一个)
		port --> 端口号 (可以不止一个)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
文件传输:
安装:
yum install lrzsz -y
sz 本机输出
rz 本机接收
-b binary 用binary的方式上传下载，不解释字符为ascii
-e 强制escape 所有控制字符，比如Ctrl+x，DEL等
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
系统服务运行级:
chkconfig
--add     增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据
--del     删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据。
--level 　指定读系统服务要在哪一个执行等级中开启或关毕。[等级代号>][系统服务](on/off/reset)
--list    显示所有运行级系统服务的运行状态信息（on或off）。如果指定了系统服务名，那么只显示指定的服务在不同运行级的状态。
chkconfig管理的服务需要在对应的init.d下的脚本加注释:告诉chkconfig缺省启动的运行级以及启动和 停止的优先级。如果某服务缺省不在任何运行级启动，那么使用 - 代替运行级。
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
软件包的管理:
rpm
-a：查询所有套件； 
-b<完成阶段><套件档>+或-t <完成阶段><套件档>+：设置包装套件的完成阶段，并指定套件档的文件名称； 
-c：只列出组态配置文件，本参数需配合"-l"参数使用； 
-d：只列出文本文件，本参数需配合"-l"参数使用； 
-e<套件档>或--erase<套件档>：删除指定的套件； 
-f<文件>+：查询拥有指定文件的套件； 
-h或--hash：套件安装时列出标记； 
-i：显示套件的相关信息； 
-i<套件档>或--install<套件档>：安装指定的套件档； 
-l：显示套件的文件列表； 
-p<套件档>+：查询指定的RPM套件档； 
-q：使用询问模式，当遇到任何问题时，rpm指令会先询问用户； 
-R：显示套件的关联性信息； 
-s：显示文件状态，本参数需配合"-l"参数使用； 
-U<套件档>或--upgrade<套件档>：升级指定的套件档； 
-v：显示指令执行过程； 
-vv：详细显示指令执行过程，便于排错。
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
yum命令:
yum
-h：显示帮助信息； 
-y：对所有的提问都回答“yes”； 
-c：指定配置文件； -q：安静模式； 
-v：详细模式； -d：设置调试等级（0-10）； 
-e：设置错误等级（0-10）； 
-R：设置yum处理一个命令的最大等待时间； 
-C：完全从缓存中运行，而不去下载或者更新任何头文件。

install：安装rpm软件包；
update：更新rpm软件包； 
check-update：检查是否有可用的更新rpm软件包； 
remove：删除指定的rpm软件包； 
list：显示软件包的信息； 
search：检查软件包的信息； 
nfo：显示指定的rpm软件包的描述信息和概要信息； 
clean：清理yum过期的缓存； 
hell：进入yum的shell提示符； 
resolvedep：显示rpm软件包的依赖关系； 
localinstall：安装本地的rpm软件包； 
localupdate：显示本地rpm软件包进行更新； 
deplist：显示rpm软件包的所有依赖关系。


